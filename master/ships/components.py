#######################################################
# components.py - Collection of classes describing ship components
# Authors : Justin Sweitzer, Ben Sweitzer
# Started development 04/04/2013
# Version 0.1
#
#######################################################

class PowerPlant():
    def __init__(self,Type):
        """ PowerPlant is the power center of the vessel. It limits what the WarpEngines can do """
        TypeDict = {'Nuclear':7000,'AntiMatter':14000}
        self.Type = Type
        self.Output = TypeDict[self.Type]
        self.Capacity = TypeDict[self.Type]*8000        #Enough to get across the galaxy with one engine
        self.Charge = 1.0
        
    def Recharge(self,fueltype,fuelamt):
        if self.Type == 'Nuclear':
            if fueltype == 'Uranium' and self.Charge + 0.5*fuelamt <= 1.0:
                self.Charge += 0.5*fuelamt
            elif self.Charge + 0.5*fuelamt >= 1.0:
                self.Charge = 1.0
            else:
                print 'Wrong fuel'
        else:
            if fueltype == 'Dilithium' and self.Charge + 0.5*fuelamt <= 1.0:
                self.Charge += 0.5*fuelamt
            elif self.Charge + 0.5*fuelamt >= 1.0:
                self.Charge = 1.0
            else:
                print 'Wrong fuel'
       
class WarpEngine():
    """ WarpEngine takes the power generated by the PowerPlant and translates it into motion"""
    # Warp scale : velocity = c * wf^6.75
    def __init__(self,Type):
        TypeDict = {'EM':4, 'Gravitron':9.0}
        self.Type = Type
       
        if self.Type == 'EM':
            self.Efficiency = 0.5
        else:
            self.Efficiency = 0.6468
           
        self.PowerRequirementPerLY = ( 7000 / (1+self.Efficiency) )
        self.PowerConsumption = self.PowerRequirementPerLY
                                                                                                       
       
        # Diminishing returns on power consumption : WarpFactor ... shit... this needs to be in the Ship() class as well...

class MainComputer():
    pass